{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/orders.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/body-container/body-container.component.ts","./src/app/body-container/body-container.component.html","./src/app/services/mock-add-orders.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {Order} from '../models/order';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  // url = 'http://localhost:8000/';\n  url = 'https://' + window.location.host;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getOrders(): Observable<Order[]> {\n    return this.http.get<Order[]>(this.url + '/api/order');\n  }\n\n  getRoutes(n: number): Observable<any> {\n    return this.http.get(this.url + '/admin/' + n);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'OrderFe';\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\" none\" class=\"all\" fxLayoutGap=\"20px\">\r\n  <div fxFlex=\"10%\">\r\n    <app-header></app-header>\r\n  </div>\r\n  <div fxFlexFill>\r\n    <app-body-container></app-body-container>\r\n  </div>\r\n  <div fxFlex=\"10%\">\r\n    <app-footer></app-footer>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {BodyContainerComponent} from './body-container/body-container.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule} from '@angular/forms';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    BodyContainerComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    MatToolbarModule,\n    FlexModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <span>My Application</span>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {OrdersService} from '../services/orders.service';\nimport {Order} from '../models/order';\nimport {MockAddOrdersService} from '../services/mock-add-orders.service';\n\ndeclare var ol: any;\n\n@Component({\n  selector: 'app-body-container',\n  templateUrl: './body-container.component.html',\n  styleUrls: ['./body-container.component.scss']\n})\nexport class BodyContainerComponent implements OnInit {\n  latitude: number = 9.1829321;\n  longitude: number = 48.7758459;\n\n  vehicleCount = 2;\n  customRide: any = {\n    location: [],\n    destiny: [],\n    options: {\n      ecological: 0.5,\n      time: 0.5,\n      comfort: 0.5\n    },\n  };\n\n  vectorLayer_name = 'vectorLayer_name';\n\n  map: any;\n\n  constructor(private ordersService: OrdersService, public mockService: MockAddOrdersService) {\n  }\n\n  ngOnInit(): void {\n    this.map = new ol.Map({\n      target: 'map',\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM()\n        })\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([this.latitude, this.longitude]),\n        zoom: 14\n      })\n    });\n    this.ordersService.getOrders().subscribe(\n      orders => this.drawOrders(orders, 'red')\n    );\n  }\n\n  drawOrders(orders: Order[], color: string): any {\n    const features: any[] = [];\n    orders.forEach(\n      order => features.push(\n        new ol.Feature({\n            geometry: new ol.geom.Point(ol.proj.fromLonLat([\n              order.location[0], order.location[1]\n            ]))\n          }\n        )));\n\n    const vectorSource = new ol.source.Vector({\n      features\n    });\n    const vectorLayer = new ol.layer.Vector({\n      source: vectorSource,\n      style: new ol.style.Style({\n        image: new ol.style.Circle({\n          radius: 4,\n          fill: new ol.style.Fill({color})\n        })\n      }),\n    });\n\n    this.map.addLayer(vectorLayer);\n\n    console.log(this.map.getLayers());\n  }\n\n  drawCentroid(centroid: any, color: string): any {\n    const features: any[] = [];\n\n    features.push(\n      new ol.Feature({\n          geometry: new ol.geom.Point(ol.proj.fromLonLat([\n            centroid[0], centroid[1]\n          ]))\n        }\n      ));\n\n    const vectorSource = new ol.source.Vector({\n      features\n    });\n    const vectorLayer = new ol.layer.Vector({\n      source: vectorSource,\n      style: new ol.style.Style({\n        image: new ol.style.Circle({\n          radius: 10,\n          fill: new ol.style.Fill({color})\n        })\n      }),\n    });\n\n    this.map.addLayer(vectorLayer);\n\n    console.log(this.map.getLayers());\n  }\n\n  getRoutes(): void {\n    const colors = [\n      'red', 'purple', 'pink', 'green', 'yellow'\n    ];\n\n    this.ordersService.getRoutes(this.vehicleCount).subscribe(\n      x => {\n        for (let i = 0; i < x.length; i++) {\n          this.drawOrders(x[i].order, colors[i]);\n          this.drawCentroid(x[i].centroid, colors[i]); //        color: 'rgba(255, 255, 255, 0.5)'\n\n        }\n      }\n    );\n  }\n\n\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"20px\" fxLayout.xs=\"column\">\r\n  <div fxFlex=\"25%\" fxFlexOffset=\"20px\">\r\n    <mat-card>\r\n      <mat-card-title>Admin View</mat-card-title>\r\n\r\n      <button mat-raised-button color=\"warn\" (click)=\"this.mockService.pushOrders()\">Add new Random Offer</button>\r\n      <p>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Number of Vehicles</mat-label>\r\n          <input matInput placeholder=\"Number of vehicles\" [(ngModel)]=\"vehicleCount\">\r\n        </mat-form-field>\r\n      </p>\r\n      <button mat-raised-button color=\"primary\" (click)=\"this.getRoutes()\">Calculate Routes</button>\r\n    </mat-card>\r\n  </div>\r\n  <div fxFlex=\"25%\">\r\n    <mat-card>\r\n      <mat-card-title>Client View</mat-card-title>\r\n      <p>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Location</mat-label>\r\n          <input matInput placeholder=\"Coordinates Location\">\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Destiny</mat-label>\r\n          <input matInput placeholder=\"Coordinates Destiny\">\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <label> ecological\r\n          <input type=\"range\" [ngModel]=\"customRide.options.ecological\">\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>time\r\n          <input type=\"range\" min=\"0\" max=\"1\" step=\"0.1\"  [ngModel]=\"customRide.options.time\">\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>comfort\r\n          <input type=\"range\" min=\"0\" max=\"1\" step=\"0.1\" [ngModel]=\"customRide.options.comfort\">\r\n        </label>\r\n      </p>\r\n      <button mat-raised-button color=\"accent\" (click)=\"this.getRoutes()\">Order ride</button>\r\n    </mat-card>\r\n  </div>\r\n\r\n\r\n  <div fxFlex=\"50%\">\r\n    <mat-card>\r\n      <div id=\"map\" class=\"map\"></div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Order} from '../models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class MockAddOrdersService {\n  // url = 'http://localhost:8000';\n  url = 'https://' + window.location.host;\n\n  start = [9.1829321, 48.7758459];\n  maxstep = 0.01;\n\n  n = 10;\n\n  orders: any = [];\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  pushOrders(): void {\n    const body = {\n      order: {\n        location: [\n          this.start[0] + Math.random() * this.maxstep,\n          this.start[1] + Math.random() * this.maxstep,\n        ],\n        destiny: this.start,\n        options: {\n          ecological: Math.random(),\n          time: Math.random(),\n          comfort: Math.random()\n        }\n      }\n    };\n\n    console.log('Posting ');\n    const headers = {'content-type': 'application/json'};\n    this.http.post(this.url + '/api/order', body, {headers}).subscribe(\n      x => {\n        console.log('posted, ', x);\n        window.location.reload();\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}